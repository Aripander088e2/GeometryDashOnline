<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar ZoomAmount, ColorCheck, BGIndex, GIndex, FGIndex, BGDrawIndex, GDrawIndex, FGDrawIndex, FGAlpha, PortalID_dest, PageObjects, PagePortals, PageOrbs, PageTriggers, EditBlock, EditPortals, EditOrbs, EditTriggers, ModeEditor, CreateObjects, DragCamera, EditPropMode, EditTriggerMode, PageSongs;

globalvar BlockID, PortalCubeID, PortalShipID, PortalBallID, PortalWaveID, PortalUFOID, PortalRobotID, PortalSpiderID, PortalSwingID, PortalArmadilloID, PortalGrav01ID, PortalGrav02ID,
OrbJumpID, OrbMaxJumpID, OrbMinJumpID, OrbBackJumpID, OrbGravity01ID, OrbGravity02ID, OrbTeleport01ID, OrbTeleport02ID, OrbSpiderID, PadJumpID, PadMaxJumpID, PadMinJumpID, PadGravityID,
PadSpiderID, ForceBlockID, PortalTeleport01ID, PortalTeleport02ID, PortalMirror01ID, PortalMirror02ID, Speed01ID, Speed02ID, Speed03ID, Speed04ID, Speed05ID PushBlockID, FadeBlockID, DestroyID;

globalvar TriggerSearchID, ColorTriggerID, ZoomCameraID, RotateCameraID, GuideCameraID, ShakeEffectID, TimeWarpID, SongTriggerID, EndTriggerID, ShaderTriggerID, GrayScaleID, InvertColorID, PixelateID, SepiaID, ChromaticID, LensCircleID;
globalvar grayscale_shader, invert_shader, pixel_shader, sepia_shader, chromatic_shader, lens_shader;

global.BlockSelect = 0;
global.PortalSelect = 0;
global.OrbSelect = 0;
global.TriggerSelect = 0;
global.ObjectSelect = 0;
global.ObjectMenuID = 0;
global.DrawShaders = 0;

global.EditorCreate = true;
global.EditProperties = false;
global.EditTriggersProperties = false;
global.EditMusicPos = true;
global.Text = "0";
global.MusicID = StereoMadness;

EditBlock = 0;
EditPortals = 0;
EditOrbs = 0;
EditTriggers = 0;
BGIndex = 0;
GIndex = 0;
BGDrawIndex = 0;
GDrawIndex = 0;
FGIndex = 0;
FGDrawIndex = 0;
FGAlpha = 0;
PageSongs = 1;
drag_x = 0;
drag_y = 0;
posX = 0;

EditPropMode = 0;
EditTriggerMode = 0;
PortalID_dest = 0;
PageObjects = 1;
PagePortals = 1;
PageOrbs = 1;
PageTriggers = 1;
ModeEditor = 1;
ZoomAmount = 0.05;
ColorCheck = c_white;

dragging = false;
DragCamera = true;
CreateObjects = false;
grayscale_shader = false;
invert_shader = false;
pixel_shader = false;
sepia_shader = false;
chromatic_shader = false;
lens_shader = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pos_x = floor(view_wview*0.5)
var pos_y = floor(view_hview*0.5)

scr_EditorGUITable(obj_gsButtonGUIEditor01, sprBlocks)

Dir01 = scr_create_gsButtonSimple(obj_gsButtonGUIDir, pos_x, pos_y, sprBtnDir02, 5, 225, -100, c_white, c_white, noone, noone, noone, noone, scr_pageObjects, 0, true)
Dir02 = scr_create_gsButtonSimple(obj_gsButtonGUIDir, pos_x, pos_y, sprBtnDir02, 6, -225, -100, c_white, c_white, noone, noone, noone, noone, scr_pageObjects, 1, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0] = max(-500, min(view_xview[0], room_width - view_wview[0]))
view_yview[0] = max(-500, min(view_yview[0], room_height - 500))

//posX+=10

// start:
if (ModeEditor == 1) {
    if (mouse_check_button_pressed(mb_left)) {
        dragging = true
        drag_x = mouse_x;
        drag_y = mouse_y;
        
        DragCamera = true;
    }
    
    if (DragCamera) {
        // update:
        if (mouse_check_button(mb_left)) {
            if (dragging) {
                // actual dragging logic:
                view_xview[0] = view_xview[0] + drag_x - mouse_x
                view_yview[0] = view_yview[0] + drag_y - mouse_y
                
                // make sure view doesn't go outside the room:
                view_xview[0] = max(-500, min(view_xview[0], room_width - view_wview[0]))
                view_yview[0] = max(-500, min(view_yview[0], room_height - 500))
            }
        }
        
        // update:
        if (mouse_check_button_released(mb_left)) {
            dragging = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(global.ObjectSelect) {
    case 0:
    instance_deactivate_object(Dir01)
    instance_deactivate_object(Dir02)
    break;
    
    default:
    instance_activate_object(Dir01)
    instance_activate_object(Dir02)
    break;
}

if (!instance_exists(obj_gsButtonGUIEditor01)) {
    if(global.ObjectSelect == 0) {
        instance_destroy(obj_gsButtonGUIEditor02)
        instance_destroy(obj_gsButtonGUIEditor03)
        instance_destroy(obj_gsButtonGUIEditor04)
        scr_EditorGUITable(obj_gsButtonGUIEditor01, sprBlocks)
    }
}

if (!instance_exists(obj_gsButtonGUIEditor02)) {
    if(global.ObjectSelect == 1) {
        instance_destroy(obj_gsButtonGUIEditor01)
        instance_destroy(obj_gsButtonGUIEditor03)
        instance_destroy(obj_gsButtonGUIEditor04)
        scr_EditorGUITable(obj_gsButtonGUIEditor02, sprEditorPortals)
    }
}

if (!instance_exists(obj_gsButtonGUIEditor03)) {
    if(global.ObjectSelect == 2) {
        instance_destroy(obj_gsButtonGUIEditor01)
        instance_destroy(obj_gsButtonGUIEditor02)
        instance_destroy(obj_gsButtonGUIEditor04)
        scr_EditorGUITable(obj_gsButtonGUIEditor03, sprEditorOrbs)
    }
}

if (!instance_exists(obj_gsButtonGUIEditor04)) {
    if(global.ObjectSelect == 3) {
        instance_destroy(obj_gsButtonGUIEditor01)
        instance_destroy(obj_gsButtonGUIEditor02)
        instance_destroy(obj_gsButtonGUIEditor03)
        scr_EditorGUITable(obj_gsButtonGUIEditor04, sprTriggers)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(PageSongs) {
    case 1:
    global.MusicID = StereoMadness;
    break;
    
    case 2:
    global.MusicID = BackOnTrack;
    break;
    
    case 3:
    global.MusicID = Polargeist;
    break;
    
    case 4:
    global.MusicID = DryOut;
    break;
    
    case 5:
    global.MusicID = BaseAfterBase;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ModeEditor == 2 &amp;&amp; global.EditorCreate) {
    if (point_in_rectangle(gui_mouse_x, gui_mouse_y, view_xport + 180, view_yport + 100, view_wport - 215, view_hport - 245)) {//mouse_y + 70 &lt; view_hport) {
        if (!instance_exists(obj_GUIMenuProperties) || !instance_exists(obj_GUIMenuTriggerColor) || !instance_exists(obj_GUIMenuTriggerZoom) || !instance_exists(obj_GUIMenuForceBlock)) {
            CreateObjects = true
        }
        if (!collision_point(mouse_x, mouse_y, obj_ParDrag, 0, false) &amp;&amp; CreateObjects) {
            switch(global.ObjectSelect) {
                case 0:
                with(instance_create(gui_mouse_x, gui_mouse_y, obj_DragBlocks)) {
                    sprite_index = sprBlocks;
                    image_index = global.BlockSelect;
                    grabbed = true;
                    AngleBlocks = 0;
                }
                global.EditProperties = true;
                global.EditTriggersProperties = false;
                EditPropMode = 1;
                break;
                
                case 1:
                switch(global.PortalSelect) {
                    case 0:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalCube_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 2;
                    break;
                    
                    case 1:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalShip_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 3;
                    break;
                    
                    case 2:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalBall_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 4;
                    break;
                    
                    case 3:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalUFO_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 5;
                    break;
                    
                    case 4:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalWave_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 6;
                    break;
                    
                    case 5:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalRobot_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 7;
                    break;
                    
                    case 6:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalSpider_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 8;
                    break;
                    
                    case 7:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalSwing_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 9;
                    break;
                    
                    case 8:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalGravity01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 10;
                    break;
                    
                    case 9:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalGravity02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 11;
                    break;
                    
                    case 12:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalMirror01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 28;
                    break;
                    
                    case 13:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalMirror02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 29;
                    break;
                    
                    case 14:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalTeleport01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 26;
                    break;
                    
                    case 15:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPortalTeleport02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 27;
                    break;
                }
                break;
                
                case 2:
                switch(global.OrbSelect) {
                    case 0:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 12;
                    break;
                    
                    case 1:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbMinJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 13;
                    break;
                    
                    case 2:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbMaxJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 14;
                    break;
                    
                    case 3:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbGravity01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 15;
                    break;
                    
                    case 4:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbBackJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 16;
                    break;
                    
                    case 5:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbGravity02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 17;
                    break;
                    
                    case 6:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbTeleport01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 18;
                    break;
                    
                    case 7:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbTeleport02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 19;
                    break;
                    
                    case 8:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objOrbSpider_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 20;
                    break;
                    
                    case 9:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPadJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 21;
                    break;
                    
                    case 10:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPadMaxJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 22;
                    break;
                    
                    case 11:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPadMinJump_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 23;
                    break;
                    
                    case 12:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPadGravity_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 24;
                    break;
                    
                    case 13:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objPadSpider_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 25;
                    break;
                    
                    case 14:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objSpeed01_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 30;
                    break;
                    
                    case 15:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objSpeed02_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 31;
                    break;
                    
                    case 16:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objSpeed03_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 32;
                    break;
                    
                    case 17:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objSpeed04_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 33;
                    break;
                    
                    case 18:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objSpeed05_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 34;
                    break;
                    
                    case 19:
                        with(instance_create(gui_mouse_x, gui_mouse_y, objPushBlock_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 35;
                    break;
                    
                    case 20:
                        with(instance_create(gui_mouse_x, gui_mouse_y, objForceBlock_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = true;
                    EditPropMode = 25;
                    EditTriggerMode = 10;
                    break;
                    
                    case 21:
                        with(instance_create(gui_mouse_x, gui_mouse_y, objFadeBlock_Edit)) {
                        grabbed = true;
                    }
                    global.EditProperties = true;
                    global.EditTriggersProperties = false;
                    EditPropMode = 36;
                    break;
                }
                
                /*with(instance_create(gui_mouse_x, gui_mouse_y, obj_DragOrbs)) {
                    sprite_index = sprOrbs;
                    image_index = global.Select;
                    grabbed = true;
                }*/
                break;
                
                case 3:
                switch(global.TriggerSelect) {
                    case 0:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerCol_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 1;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 1:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerZoom_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 2;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 2:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerRotateCam_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 3;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 3:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerGuideCam_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 4;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 6:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerShake_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 7;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 7:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerTimeWarp_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 8;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 8:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerSong_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 9;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 9:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerEnd_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 10;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 17:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerShader_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 18;
                    global.EditProperties = false;
                    global.EditTriggersProperties = true;
                    break;
                    
                    case 18:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerGrayScale_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 19;
                    grayscale_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 19:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerInvertColor_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 20;
                    invert_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 20:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerPixelate_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 21;
                    pixel_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 21:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerSepia_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 22;
                    sepia_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 22:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerChromatic_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 23;
                    chromatic_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                    
                    case 23:
                    with(instance_create(gui_mouse_x, gui_mouse_y, objTriggerLensCircle_Edit)) {
                        grabbed = true;
                    }
                    EditTriggerMode = 24;
                    lens_shader = true;
                    global.EditProperties = false;
                    global.EditTriggersProperties = false;
                    break;
                }
                
                /*with(instance_create(gui_mouse_x, gui_mouse_y, obj_DragOrbs)) {
                    sprite_index = sprOrbs;
                    image_index = global.Select;
                    grabbed = true;
                }*/
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_pageEditorObjects)

switch(global.ObjectSelect) {
    case 0:
    instance_deactivate_object(Button08)
    instance_deactivate_object(Button09)
    instance_deactivate_object(Button10)
    instance_deactivate_object(Button11)
    instance_deactivate_object(Button12)
    break;
    
    case 1:
    switch (PagePortals) {
        case 1:
        instance_activate_object(Button07)
        instance_activate_object(Button08)
        instance_activate_object(Button09)
        instance_activate_object(Button10)
        instance_activate_object(Button11)
        instance_activate_object(Button12)
        break;
        
        case 2:
        instance_deactivate_object(Button07)
        instance_deactivate_object(Button08)
        instance_deactivate_object(Button09)
        instance_deactivate_object(Button10)
        instance_deactivate_object(Button11)
        instance_deactivate_object(Button12)
        break;
    }
    break;
    
    case 2:
    switch (PageOrbs) {
        case 1:
        //instance_activate_object(Button02)
        //instance_activate_object(Button03)
        //instance_activate_object(Button04)
        //instance_activate_object(Button05)
        //instance_activate_object(Button06)
        //instance_activate_object(Button07)
        //instance_activate_object(Button08)
        //instance_activate_object(Button09)
        //instance_activate_object(Button10)
        instance_activate_object(Button11)
        instance_activate_object(Button12)
        break;
        
        case 2:
        //instance_deactivate_object(Button02)
        //instance_deactivate_object(Button03)
        //instance_deactivate_object(Button04)
        //instance_deactivate_object(Button05)
        //instance_deactivate_object(Button06)
        //instance_deactivate_object(Button07)
        //instance_deactivate_object(Button08)
        //instance_deactivate_object(Button09)
        //instance_deactivate_object(Button10)
        instance_deactivate_object(Button11)
        instance_deactivate_object(Button12)
        break;
    }
    break;
    
    case 3:
    switch (PageTriggers) {
        case 1:
        //instance_activate_object(Button02)
        //instance_activate_object(Button03)
        //instance_activate_object(Button04)
        //instance_activate_object(Button05)
        instance_activate_object(Button06)
        instance_activate_object(Button07)
        instance_activate_object(Button08)
        instance_activate_object(Button09)
        instance_activate_object(Button10)
        instance_activate_object(Button11)
        instance_activate_object(Button12)
        break;
        
        case 2:
        //instance_deactivate_object(Button02)
        //instance_deactivate_object(Button03)
        //instance_deactivate_object(Button04)
        //instance_deactivate_object(Button05)
        instance_deactivate_object(Button06)
        instance_deactivate_object(Button07)
        instance_deactivate_object(Button08)
        instance_deactivate_object(Button09)
        instance_deactivate_object(Button10)
        instance_deactivate_object(Button11)
        instance_deactivate_object(Button12)
        break;
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_set_offset(sprSliderBar, 30, 40)
application_surface_draw_enable(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_set_offset(sprSliderBar, 525, 40)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprEditorBar, 0, 0, view_hport, view_wview, 1.10, 0, c_white, 0.7)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_other, ev_user0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
