<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>obj_gsButtonBase</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// sprite animation speed
image_speed = 0;

// sprite index
image_xscale = 0.9;
image_yscale = 0.9;
sprite_button_index = 0;

// is the button down?
is_down = false;

// is the button up?
is_over = false;

// is this the current selected button?
is_selected = false;

// default text
str_text = "Button";

ScaleX = 1;

PosGen = 0;

PosGenX = 0;
PosGenY = 0;

image_color_1 = c_white;
image_color_2 = c_white;

label_color = make_colour_hsv(138, 184, 45);

label_color_over = c_white;

label_color_down = c_black;

label_down_x_offset = 0;
label_down_y_offset = 4;

PosX = 0;
PosY = 0;

// set a number to be part of a group controller
group_id = 1010;

CoordState = 1;

scripts[ev_left_button] = noone;
scripts[ev_left_press] = noone;
scripts[ev_mouse_enter] = noone;
scripts[ev_mouse_leave] = noone;
scripts[ev_left_release] = noone;

alarm_set(0, 1);

event_perform(ev_other, ev_user0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_gsButtonGroup) &gt; 0) {
    with(obj_gsButtonGroup) {
        event_user(0);
    }
}

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(position_meeting(gui_mouse_x, gui_mouse_y, self)) {  
    if(!is_over) {
        if(scripts[ev_mouse_enter] != noone) {
            script_execute(scripts[ev_mouse_enter]);
        }
        
        global.IDBlockSelect = false;
    }
    
    is_over = true;
} else {
    if(is_over) {
        if(scripts[ev_mouse_leave] != noone) {
            script_execute(scripts[ev_mouse_leave]);
        }
        
        ex_tween_play(__image_xscale__, image_xscale, 0.9, 20, scr_ease_out_bounce, true)
        ex_tween_play(__image_yscale__, image_yscale, 0.9, 20, scr_ease_out_bounce, true)
        
        switch(ModeEditor)
        {
            case 1:
            DragCamera = false;
            break;
            
            case 2:
            CreateObjects = false;
            break
        }
        global.IDBlockSelect = true;
    }
    
    is_over = false;
}

/*
if(is_down) {
    image_index = 2; 
} else if(is_over || is_selected &amp;&amp; !is_down) {
    image_index = 1;
} else {
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_down = false;

if(position_meeting(gui_mouse_x, gui_mouse_y, self)) {  
    if (ScaleVar01) {
        if(is_over) {
            
            if(scripts[ev_left_release] != noone) {
                script_execute(scripts[ev_left_release]);
            }
        }
        
        ex_tween_play(__image_xscale__, image_xscale, 0.9, 0, scr_ease_linear, true)
        ex_tween_play(__image_yscale__, image_yscale, 0.9, 0, scr_ease_linear, true)
        
        switch(ModeEditor)
        {
            case 1:
            DragCamera = false;
            break;
            
            case 2:
            CreateObjects = false;
            break
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(position_meeting(gui_mouse_x, gui_mouse_y, self)) {  
    if (ScaleVar01) {
        if(is_over) {
            if(scripts[ev_left_press] != noone) {
                script_execute(scripts[ev_left_press]);
            }
        
            is_down = true;
        }
        
        switch(ModeEditor)
        {
            case 1:
            DragCamera = false;
            break;
            
            case 2:
            CreateObjects = false;
            break
        }
        
        ex_tween_play(__image_xscale__, image_xscale, 1.10, 20, scr_ease_out_bounce, true)
        ex_tween_play(__image_yscale__, image_yscale, 1.10, 20, scr_ease_out_bounce, true)
        global.EditProperties = false;
        global.EditTriggersProperties = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message("fml!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(is_over) {
    if(scripts[ev_left_button] != noone) {
        script_execute(scripts[ev_left_button]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ex_tween_play(PosGen_, PosGen, 0.5, 30, scr_ease_out_back, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(CoordState) {
    case 1:
    x = (view_wport * PosX);
    y = (view_hport * PosY);
    break;
    
    case 2:
    x = (view_wport * 0.5) + PosX;
    y = (view_hport * 0.5) + PosY;
    break;
    
    case 3:
    x = PosX;
    y = PosY;
    break;
    
    case 4:
    x = view_wport + PosX;
    y = PosY;
    break;
    
    case 5:
    x = PosX;
    y = view_hport + PosY;
    break;
    
    case 6:
    x = view_wport + PosX;
    y = view_hport + PosY;
    break;
    
    case 7:
    x = (view_wport * 0.5) + PosX;
    y = view_hport + PosY;
    break;
    
    case 8:
    x = view_wport + PosX;
    y = (view_hport * 0.5) + PosY;
    break;
    
    case 9:
    x = (view_wport * 0.5) - (533) + PosX;
    y = (view_hport * 0.5) + PosY;
    break;
    
    case 10:
    x = (view_wport * PosGenX) + PosX;
    y = (view_hport * PosGenY) + PosY;
    break;
    
    case 11:
    x = (view_wport * PosGen) + PosX;
    y = (view_hport * 0.5) + PosY;
    break;
    
    case 12:
    x = (view_wport * 0.5) + PosX;
    y = (view_hport * PosGen) + PosY;
    break;
}

switch(group_id) {
    case 2:
    image_index = 0;
    
    if (global.EditTriggersProperties) {
        image_alpha = 1;
    }
    else {
        image_alpha = 0.5;
    }
    break
    
    case 3:
    image_index = 2;
    
    if (global.EditProperties || global.EditTriggersProperties) {
        image_alpha = 1;
    }
    else {
        image_alpha = 0.5;
    }
    break;
    
    case 4:
    image_index = 1;
    
    if (global.EditProperties) {
        image_alpha = 1;
    }
    else {
        image_alpha = 0.5;
    }
    break;
    
    case 7:
    if (global.EditMusicPos) {
        image_index = 0;
    }
    else {
        image_index = 1;
    }
    break;
}

draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, 0, image_color_1, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
