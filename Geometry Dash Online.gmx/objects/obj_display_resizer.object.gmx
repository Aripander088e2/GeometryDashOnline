<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_view_width = display_view_width;
my_view_height = display_view_height;
my_mode = display_mode;

if ( os_browser == browser_not_a_browser ) {
    if (os_type == os_windows) {
        if (window_get_fullscreen()) {
            display_w = display_get_width();
            display_h = display_get_height();
        } else {
            display_w = global.WindowWidth;//window_get_width();
            display_h = global.WindowHeight;//window_get_height();
        }
    } else if (os_type == os_android) {
        display_w = display_get_width();
        display_h = display_get_height();
    }
} else {
    display_w = browser_width;
    display_h = browser_height;
}

event_perform(ev_other, ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Only resize when the display size changed.
// This improves performance.

var ww, wh;
if (os_browser == browser_not_a_browser) {
    if (os_type == os_windows) {
        if (window_get_fullscreen()) {
            ww = display_get_width();
            wh = display_get_height();
        } else {
            ww = global.WindowWidth;
            wh = global.WindowHeight;
        }
    } else if (os_type == os_android) {
        ww = display_get_width();
        wh = display_get_height();
    }
}
else {
    ww = browser_width;
    wh = browser_height;
}

if (display_w == ww &amp;&amp; display_h == wh &amp;&amp; my_mode == display_mode &amp;&amp; my_view_width == display_view_width &amp;&amp; my_view_height == display_view_height) {
    exit;
}

display_w = ww;
display_h = wh;
my_mode = display_mode;
my_view_width = display_view_width;
my_view_height = display_view_height;
event_perform(ev_other, ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (my_mode == DisplayMode.FIT) {
    display_resize_fit(my_view_width, my_view_height, display_w, display_h);
}
else if (my_mode == DisplayMode.FILL) {
    display_resize_fill(my_view_width, my_view_height, display_w, display_h);
}
else if (my_mode == DisplayMode.STRETCH){
    display_resize_stretch(my_view_width, my_view_height, display_w, display_h);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (!application_surface_is_enabled() || PageShaders == 8)
    application_surface_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
