<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDrag</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
grabbed = false;
xx = 0;
yy = 0;

OrbJumpID = id;
OrbJumpX = OrbJumpID.x;
OrbJumpY = OrbJumpID.y;

OrbJumpMinID = id;
OrbJumpMinX = OrbJumpMinID.x;
OrbJumpMinY = OrbJumpMinID.y;

OrbJumpMaxID = id;
OrbJumpMaxX = OrbJumpMaxID.x;
OrbJumpMaxY = OrbJumpMaxID.y;

OrbGravity01ID = id;
OrbGravity01X = OrbGravity01ID.x;
OrbGravity01Y = OrbGravity01ID.y;

OrbGravity02ID = id;
OrbGravity02X = OrbGravity02ID.x;
OrbGravity02Y = OrbGravity02ID.y;

OrbJumpBackID = id;
OrbJumpBackX = OrbJumpBackID.x;
OrbJumpBackY = OrbJumpBackID.y;

OrbSpiderID = id;
OrbSpiderX = OrbSpiderID.x;
OrbSpiderY = OrbSpiderID.y;

OrbTeleport01ID = id;
OrbTeleport01X = OrbTeleport01ID.x;
OrbTeleport01Y = OrbTeleport01ID.y;

OrbTeleport02ID = id;
OrbTeleport02X = OrbTeleport02ID.x;
OrbTeleport02Y = OrbTeleport02ID.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (grabbed &amp;&amp; CreateObjects) {
    x = mouse_x + xx;
    y = mouse_y + xx;
    
    move_snap(35.1, 35.1)
}

if (position_meeting(mouse_x, mouse_y, id) &amp;&amp; CreateObjects) {
    if (mouse_check_button(mb_left)) {
        DragCamera = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grabbed = false;
depth = 1;

switch(image_index) {
    case 0:
    OrbJumpID = id;
    OrbJumpX = OrbJumpID.x;
    OrbJumpY = OrbJumpID.y;
    break;
    
    case 1:
    OrbJumpMinID = id;
    OrbJumpMinX = OrbJumpMinID.x;
    OrbJumpMinY = OrbJumpMinID.y;
    break;
    
    case 2:
    OrbJumpMaxID = id;
    OrbJumpMaxX = OrbJumpMaxID.x;
    OrbJumpMaxY = OrbJumpMaxID.y;
    break;
    
    case 3:
    OrbGravity01ID = id;
    OrbGravity01X = OrbGravity01ID.x;
    OrbGravity01Y = OrbGravity01ID.y;
    break;
    
    case 4:
    OrbJumpBackID = id;
    OrbJumpBackX = OrbJumpBackID.x;
    OrbJumpBackY = OrbJumpBackID.y;
    break;
    
    case 5:
    OrbGravity02ID = id;
    OrbGravity02X = OrbGravity02ID.x;
    OrbGravity02Y = OrbGravity02ID.y;
    break;
    
    case 6:
    OrbTeleport01ID = id;
    OrbTeleport01X = OrbTeleport01ID.x;
    OrbTeleport01Y = OrbTeleport01ID.y;
    break;
    
    case 7:
    OrbTeleport02ID = id;
    OrbTeleport02X = OrbTeleport02ID.x;
    OrbTeleport02Y = OrbTeleport02ID.y;
    break;
    
    case 8:
    OrbSpiderID = id;
    OrbSpiderX = OrbSpiderID.x;
    OrbSpiderY = OrbSpiderID.y;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
global.EditProperties = false;
global.EditTriggersProperties = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grabbed = true;
depth = -1;
xx = x - mouse_x;
yy = y - mouse_y;

switch(image_index) {
    case 0:
    OrbJumpID = id;
    OrbJumpX = OrbJumpID.x;
    OrbJumpY = OrbJumpID.y;
    break;
    
    case 1:
    OrbJumpMinID = id;
    OrbJumpMinX = OrbJumpMinID.x;
    OrbJumpMinY = OrbJumpMinID.y;
    break;
    
    case 2:
    OrbJumpMaxID = id;
    OrbJumpMaxX = OrbJumpMaxID.x;
    OrbJumpMaxY = OrbJumpMaxID.y;
    break;
    
    case 3:
    OrbGravity01ID = id;
    OrbGravity01X = OrbGravity01ID.x;
    OrbGravity01Y = OrbGravity01ID.y;
    break;
    
    case 4:
    OrbJumpBackID = id;
    OrbJumpBackX = OrbJumpBackID.x;
    OrbJumpBackY = OrbJumpBackID.y;
    break;
    
    case 5:
    OrbGravity02ID = id;
    OrbGravity02X = OrbGravity02ID.x;
    OrbGravity02Y = OrbGravity02ID.y;
    break;
    
    case 6:
    OrbTeleport01ID = id;
    OrbTeleport01X = OrbTeleport01ID.x;
    OrbTeleport01Y = OrbTeleport01ID.y;
    break;
    
    case 7:
    OrbTeleport02ID = id;
    OrbTeleport02X = OrbTeleport02ID.x;
    OrbTeleport02Y = OrbTeleport02ID.y;
    break;
    
    case 8:
    OrbSpiderID = id;
    OrbSpiderX = OrbSpiderID.x;
    OrbSpiderY = OrbSpiderID.y;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1.17
image_yscale = 1.17;

draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
