<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PosX = 0;
PosY = 0;
max_value = 0;
selected_ = false;
image_index = 0;

PosX = 0;
PosY = 0;
SlideState = 0;

//event_perform(ev_other, ev_user1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(EditPropMode) {
    case 1:
    value = BlockID.AngleBlocks;
    break;
    
    case 2:
    value = PortalCubeID.AngleBlocks;
    break;
    
    case 3:
    value = PortalShipID.AngleBlocks;
    break;
    
    case 4:
    value = PortalBallID.AngleBlocks;
    break;
    
    case 5:
    value = PortalUFOID.AngleBlocks;
    break;
    
    case 6:
    value = PortalWaveID.AngleBlocks;
    break;
    
    case 7:
    value = PortalRobotID.AngleBlocks;
    break;
    
    case 8:
    value = PortalSpiderID.AngleBlocks;
    break;
    
    case 9:
    value = PortalSwingID.AngleBlocks;
    break;
    
    case 10:
    value = PortalGrav01ID.AngleBlocks;
    break;
    
    case 11:
    value = PortalGrav02ID.AngleBlocks;
    break;
    
    case 12:
    value = OrbJumpID.AngleBlocks;
    break;
    
    case 13:
    value = OrbMinJumpID.AngleBlocks;
    break;
    
    case 14:
    value = OrbMaxJumpID.AngleBlocks;
    break;
    
    case 15:
    value = OrbGravity01ID.AngleBlocks;
    break;
    
    case 16:
    value = OrbGravity02ID.AngleBlocks;
    break;
    
    case 17:
    value = OrbBackJumpID.AngleBlocks;
    break;
    
    case 18:
    value = OrbTeleport01ID.AngleBlocks;
    break;
    
    case 19:
    value = OrbTeleport02ID.AngleBlocks;
    break;
    
    case 20:
    value = OrbSpiderID.AngleBlocks;
    break;
    
    case 21:
    value = PadJumpID.AngleBlocks;
    break;
    
    case 22:
    value = PadMinJumpID.AngleBlocks;
    break;
    
    case 23:
    value = PadMaxJumpID.AngleBlocks;
    break;
    
    case 24:
    value = PadGravityID.AngleBlocks;
    break;
    
    case 25:
    value = PadSpiderID.AngleBlocks;
    break;
    
    case 26:
    value = ForceBlockID.AngleBlocks;
    break;
    
    case 27:
    value = PortalTeleport01ID.AngleBlocks;
    break;
    
    case 28:
    value = PortalTeleport02ID.AngleBlocks;
    break;
    
    case 29:
    value = PortalMirror01ID.AngleBlocks;
    break;
    
    case 30:
    value = PortalMirror02ID.AngleBlocks;
    break;
    
    case 31:
    value = Speed01ID.AngleBlocks;
    break;
    
    case 32:
    value = Speed02ID.AngleBlocks;
    break;
    
    case 33:
    value = Speed03ID.AngleBlocks;
    break;
    
    case 34:
    value = Speed04ID.AngleBlocks;
    break;
    
    case 35:
    value = Speed05ID.AngleBlocks;
    break;
    
    case 36:
    value = PushBlockID.AngleBlocks;
    break;
    
    case 37:
    value = FadeBlockID.AngleBlocks;
    break;
    
    /*case 10:
    value = PortalCubeID.AngleBlocks;
    break;*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button(mb_left) &amp;&amp; ScaleVar01) {
    var button_x = x + 150*value;
    var button_y = y;
    var button_radius = sprite_get_width(sprSliderBorderEditor)/2
    
    if (point_in_circle(gui_mouse_x, gui_mouse_y, button_x, button_y, button_radius)) {
        selected_ = true;
    }
    
    if (ModeEditor == 1) {
        DragCamera = false
    }
    else if (ModeEditor == 2) {
        CreateObjects = false
    }
}

if !mouse_check_button(mb_left) {
    selected_ = false;
}

if (selected_ &amp;&amp; ScaleVar01) {
    value = clamp((gui_mouse_x - x) / 150, -1, 1)
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*ex_tween_play(PosGen_, PosGen, 0.5, 20, scr_ease_out_quad, true)
ex_tween_play(AlphaBackGround_, AlphaBackGround, 0.5, 20, scr_ease_out_sine, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(EditPropMode) {
    case 1:
    BlockID.AngleBlocks = value;
    break;
    
    case 2:
    PortalCubeID.AngleBlocks = value;
    break;
    
    case 3:
    PortalShipID.AngleBlocks = value;
    break;
    
    case 4:
    PortalBallID.AngleBlocks = value;
    break;
    
    case 5:
    PortalUFOID.AngleBlocks = value;
    break;
    
    case 6:
    PortalWaveID.AngleBlocks = value;
    break;
    
    case 7:
    PortalRobotID.AngleBlocks = value;
    break;
    
    case 8:
    PortalSpiderID.AngleBlocks = value;
    break;
    
    case 9:
    PortalSwingID.AngleBlocks = value;
    break;
    
    case 10:
    PortalGrav01ID.AngleBlocks = value;
    break;
    
    case 11:
    PortalGrav02ID.AngleBlocks = value;
    break;
    
    case 12:
    OrbJumpID.AngleBlocks = value;
    break;
    
    case 13:
    OrbMinJumpID.AngleBlocks = value;
    break;
    
    case 14:
    OrbMaxJumpID.AngleBlocks = value;
    break;
    
    case 15:
    OrbGravity01ID.AngleBlocks = value;
    break;
    
    case 16:
    OrbGravity02ID.AngleBlocks = value;
    break;
    
    case 17:
    OrbBackJumpID.AngleBlocks = value;
    break;
    
    case 18:
    OrbTeleport01ID.AngleBlocks = value;
    break;
    
    case 19:
    OrbTeleport02ID.AngleBlocks = value;
    break;
    
    case 20:
    OrbSpiderID.AngleBlocks = value;
    break;
    
    case 21:
    PadJumpID.AngleBlocks = value;
    break;
    
    case 22:
    PadMinJumpID.AngleBlocks = value;
    break;
    
    case 23:
    PadMaxJumpID.AngleBlocks = value;
    break;
    
    case 24:
    PadGravityID.AngleBlocks = value;
    break;
    
    case 25:
    PadSpiderID.AngleBlocks = value;
    break;
    
    case 26:
    ForceBlockID.AngleBlocks = value;
    break;
    
    case 27:
    PortalTeleport01ID.AngleBlocks = value;
    break;
    
    case 28:
    PortalTeleport02ID.AngleBlocks = value;
    break;
    
    case 29:
    PortalMirror01ID.AngleBlocks = value;
    break;
    
    case 30:
    PortalMirror02ID.AngleBlocks = value;
    break;
    
    case 31:
    Speed01ID.AngleBlocks = value;
    break;
    
    case 32:
    Speed02ID.AngleBlocks = value;
    break;
    
    case 33:
    Speed03ID.AngleBlocks = value;
    break;
    
    case 34:
    Speed04ID.AngleBlocks = value;
    break;
    
    case 35:
    Speed05ID.AngleBlocks = value;
    break;
    
    case 36:
    PushBlockID.AngleBlocks = value;
    break;
    
    case 37:
    FadeBlockID.AngleBlocks = value;
    break;
    
    /*case 10:
    PortalCubeID.AngleBlocks;
    break;*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprSliderBarEditor, 0, x, y, 0.75, 0.7, 0, c_white, 1);
draw_sprite_ext(sprSliderBorderEditor, 0, x + 150 * value, y, 0.65, 0.65, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
