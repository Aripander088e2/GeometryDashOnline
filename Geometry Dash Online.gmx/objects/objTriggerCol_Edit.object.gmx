<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDrag</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sprTriggers;
image_speed = 0;
grabbed = false;
xx = 0;
yy = 0;

ColorTriggerID = id;

ColorMode = 1;

RedBG = 255;
GreenBG = 255;
BlueBG = 255;

RedG = 255;
GreenG = 255;
BlueG = 255;
TimeColor = 60;

ColorTime01 = 1;
ColorTime02 = 1;
ColorTime03 = 1;
TimeNum01 = 1;
TriggerModeEdit = 0;

AngleBlocks = 0;
ScaleBlocks = 1;
AlphaBlocks = 1;

DestroyID = ColorTriggerID;
TriggerSearchID = ColorTriggerID;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (grabbed &amp;&amp; CreateObjects) {
    x = mouse_x + xx;
    y = mouse_y + xx;
    
    move_snap(35.1, 35.1)
}

switch(ColorMode) {
    case 1:
    RedBG = 255 * ColorTime01;
    GreenBG = 255 * ColorTime02;
    BlueBG = 255 * ColorTime03;
    break;
    
    case 2:
    RedG = 255 * ColorTime01;
    GreenG = 255 * ColorTime02;
    BlueG = 255 * ColorTime03;
    break;
}

TimeColor = 60 * TimeNum01;

if (position_meeting(mouse_x, mouse_y, id) &amp;&amp; CreateObjects) {
    if (mouse_check_button(mb_left)) {
        switch(ModeEditor)
        {
            case 1:
            DragCamera = true;
            CreateObjects = false;
            break;
            
            case 2:
            DragCamera = false;
            CreateObjects = true;
            break
        }
    }
    else {
        switch(ModeEditor)
        {
            case 1:
            DragCamera = true;
            CreateObjects = false;
            break;
            
            case 2:
            DragCamera = false;
            CreateObjects = true;
            break
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.IDBlockSelect) {
    grabbed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.IDBlockSelect) {
    ColorTriggerID = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
global.EditProperties = false;
global.EditTriggersProperties = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ModeEditor == 2 &amp;&amp; global.EditorCreate) {
    grabbed = true;
    xx = x - mouse_x;
    yy = y - mouse_y;
}

if (global.IDBlockSelect) {
    EditTriggerMode = 1;
    global.EditProperties = false;
    global.EditTriggersProperties = true;
}

DestroyID = ColorTriggerID;
TriggerSearchID = ColorTriggerID;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var __x1, __y1, __x2, __y2, __x3, __y3, __x4, __y4;
__x1 = x;
__y1 = y;
__x2 = __x1-sprite_width/2;
__y2 = __y1-sprite_height/2;
__x3 = __x1+sprite_width/2;
__y3 = __y1+sprite_height/2;
__x4 = __x2+__x3-__x1;
__y4 = __y2+__y3-__y1;

image_xscale = 1.17 * ScaleBlocks;
image_yscale = 1.17 * ScaleBlocks;
image_angle = 360 * AngleBlocks;
image_alpha = 1 * AlphaBlocks;

switch(TriggerModeEdit) {
    case 0:
    draw_line_width_colour(x, y, x, y - room_height, 2.5, c_white, c_white)
    draw_line_width_colour(x, y, x, y + room_height, 2.5, c_white, c_white)
    break;
    
    case 1:
    draw_rectangle(__x2, __y2, __x3, __y3, true)
    break;
}

draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, image_angle, c_white, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
