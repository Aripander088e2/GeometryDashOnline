<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBtnCubes</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ex_tween_initialize()

globalvar Pause, Direction, xFlip, JumpOrd, TimeWarp;
screenShake = false;

key_left = virtual_key_add(0, view_hview[0] - 400, 200, view_hview[0], vk_left);
key_right = virtual_key_add(200, view_hview[0] - 400, 400, view_hview[0], vk_right);
 
keyUp_01 = virtual_key_add(0, -1, view_wview[0] - 150, view_hview[0] - 400, vk_up);
keyUp_02 = virtual_key_add(600, 150, view_wview[0], view_hview[0], vk_up);

xFlip = 1;
Direction = 0;

/*virtual_key_show(key_left)
virtual_key_show(key_right)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screenShake = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Position</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var PosX = 0.5;

if (instance_exists(oPlayer)) {
    // Make sure player is inside box
    x = max(oPlayer.x - sprite_width  * 0.5 + 32, min(x, oPlayer.x + (sprite_width  * 0.5) - 32));
    y = max(oPlayer.y - sprite_height * 0.5 + 32, min(y, oPlayer.y + (sprite_height * 0.5) - 32));
    
    if (keyboard_check(vk_left)) {
        PosX = 0.8;
    } else if (keyboard_check(vk_right)) {
        PosX = 0.2;
    } else {
        PosX = 0.5;
    }
    
    // Approach      
    view_xview[0] = lerp(view_xview[0], x - view_wport[0] * PosX, 0.025);
    view_yview[0] = lerp(view_yview[0], y - view_hport[0] * 0.5 - 100, 0.025);
    
    // Make sure camera is inside room
    view_xview[0] = max(0, min(view_xview[0], room_width  - view_wport[0]));
    view_yview[0] = max(0, min(view_yview[0], room_height - view_hport[0]));      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Screenshake</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Screenshake
/*if (screenShake) {
    view_angle[0] = random_range(-1, 1);
} else {
    // Reset
    view_angle[0] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Matrix X
if Direction = 1
{
    var matrix = matrix_get(matrix_projection);
    
    if xFlip &gt; -1
    {
        xFlip = xFlip - 0.1
    }
    matrix[0] *= xFlip;
    
    matrix_set(matrix_projection,matrix);
}
else
{
    var matrix = matrix_get(matrix_projection);
    
    if xFlip &lt; 1
    {
        xFlip = xFlip + 0.1
    }
    matrix[0] *= xFlip;
    
    matrix_set(matrix_projection,matrix);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_left)
{
    draw_sprite_ext(sprPlatformerControls, 1, view_xport + 200, view_hport - 100, 1.15, 1.15, 0, c_white, 1)
}
else if keyboard_check(vk_right)
{
    draw_sprite_ext(sprPlatformerControls, 1, view_xport + 200, view_hport - 100, 1.15 * -1, 1.15, 0, c_white, 1)
}
else
{
    draw_sprite_ext(sprPlatformerControls, 0, view_xport + 200, view_hport - 100, 1.15, 1.15, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
